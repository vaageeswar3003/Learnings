canDeactivate is a route guard decides weather a user can navigate away from a route or not.

example
=======

app-routing.module.ts
---------------------

const routes: Routes = [{
    path: '/edit-user',
    component: EditUSerComponent,
    canDeactivate: [DeactivateGuardService]
}]

deactivate-guard.service.ts
---------------------------

export interface IDeactivateGuard {
    canExit: () => boolean | Observable<boolean> | Promise<boolean>;
}

export class DeactivateGuardService implemets CanDeactivate<IDeactivateGuard> {
    canDeactivate(component: IDeactivateGuard, 
                  route: ActivatedRouteSnapshot, 
                  state: RouterStateSnapshot, 
                  nextState: RouterStateSnapshot): boolean | Promise<boolean> | Observable<boolean> {
        return component.canExit();
    }
}

edit-user.component.ts
-----------------------

export class EditUserComponent implements OnInit, IDeactivateGuard  {
    constructor() { }

    ngOnInit() { }

    canExit() {
        if(confirm('Are you sure you want to exit?')) {
            return true;
        } else {
            return false;
        }
    }
}