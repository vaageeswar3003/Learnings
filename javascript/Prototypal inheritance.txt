Prototypal inheritance
========================
In programming, we often want to take something and extend it.

For instance, we have a user object with its properties and methods, and want to make admin and guest as slightly modified variants of it.
We’d like to reuse what we have in user, not copy/reimplement its methods, just build a new object on top of it.

--> In JavaScript, objects have a special hidden property [[Prototype]] (as named in the specification), 
    that is either null or references another object. That object is called “a prototype”: